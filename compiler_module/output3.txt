test_function:
	push      {lr, r4 - r7}
	mov       literal_value_10_52_54_reg , #10
	mov       literal_value_10_52_54_var1_res_reg , #1
	cmp       literal_value_10_52_54_reg , r0
	beq       literal_value_10_52_54_eq_var1_res_equal
	mov       literal_value_10_52_54_var1_res_reg , #0
literal_value_10_52_54_eq_var1_res_equal:
	cmp       literal_value_10_52_54_var1_res_reg , #0
	beq       test_function_if_false_0_42_280
	add       function_return_reg , r1 , r0
	mov       r0 , function_return_reg
	b         test_function_end
test_function_if_false_0_42_280:
	mov       literal_value_2_97_98_reg , #2
	mov       literal_value_2_97_98_var2_res_reg , #1
	cmp       literal_value_2_97_98_reg , r1
	beq       literal_value_2_97_98_eq_var2_res_equal
	mov       literal_value_2_97_98_var2_res_reg , #0
literal_value_2_97_98_eq_var2_res_equal:
	cmp       literal_value_2_97_98_var2_res_reg , #0
	beq       test_function_if_false_1_87_280
	sub       function_return_reg , r1 , r0
	mov       r0 , function_return_reg
	b         test_function_end
test_function_if_false_1_87_280:
	mov       literal_value_2_141_142_reg , #2
	mov       literal_value_2_141_142_var2_res_reg , #1
	cmp       literal_value_2_141_142_reg , r1
	beq       literal_value_2_141_142_eq_var2_res_equal
	mov       literal_value_2_141_142_var2_res_reg , #0
literal_value_2_141_142_eq_var2_res_equal:
	cmp       literal_value_2_141_142_var2_res_reg , #0
	beq       test_function_if_false_2_131_280
	sub       function_return_reg , r1 , r0
	mov       r0 , function_return_reg
	b         test_function_end
test_function_if_false_2_131_280:
	mov       literal_value_2_185_186_reg , #2
	mov       literal_value_2_185_186_var2_res_reg , #1
	cmp       literal_value_2_185_186_reg , r1
	beq       literal_value_2_185_186_eq_var2_res_equal
	mov       literal_value_2_185_186_var2_res_reg , #0
literal_value_2_185_186_eq_var2_res_equal:
	cmp       literal_value_2_185_186_var2_res_reg , #0
	beq       test_function_if_false_3_175_280
	sub       function_return_reg , r1 , r0
	mov       r0 , function_return_reg
	b         test_function_end
test_function_if_false_3_175_280:
	mov       literal_value_1_243_244_reg , #1
	mov       literal_value_1_243_244_var1_res_reg , #1
	cmp       literal_value_1_243_244_reg , r0
	beq       literal_value_1_243_244_eq_var1_res_equal
	mov       literal_value_1_243_244_var1_res_reg , #0
literal_value_1_243_244_eq_var1_res_equal:
	cmp       literal_value_1_243_244_var1_res_reg , #0
	beq       test_function_if_false_4_233_278
	add       function_return_reg , r1 , r0
	mov       r0 , function_return_reg
	b         test_function_end
test_function_if_false_4_233_278:
	add       var2_var1_res_reg , r1 , r0
	mov       literal_value_44_327_329_reg , #44
	add       literal_value_44_327_329_var2_var1_res_reg_res_reg , literal_value_44_327_329_reg , var2_var1_res_reg
	mov       literal_value_2_303_304_reg , #2
	mul       literal_value_44_327_329_var2_var1_res_reg_res_reg_literal_value_2_303_304_res_reg , literal_value_44_327_329_var2_var1_res_reg_res_reg , literal_value_2_303_304_reg
	mov       literal_value_3_373_374_reg , #3
	add       var2_literal_value_3_373_374_res_reg , r1 , literal_value_3_373_374_reg
	mul       var2_literal_value_3_373_374_res_reg_test_variable_res_reg , var2_literal_value_3_373_374_res_reg , test_variable_reg
	mov       test_variable_test_variable2_res_reg , #1
	cmp       test_variable_reg , test_variable2_reg
	blt       test_variable_lt_test_variable2_res_less_than
	mov       test_variable_test_variable2_res_reg , #0
test_variable_lt_test_variable2_res_less_than:
	mov       assert_variable_test_variable2_res_reg , #1
	cmp       assert_variable_reg , test_variable2_reg
	bgt       assert_variable_gt_test_variable2_res_greater_than
	mov       assert_variable_test_variable2_res_reg , #0
assert_variable_gt_test_variable2_res_greater_than:
	mov       function_return_reg , #1
	cmp       assert_variable_test_variable2_res_reg , test_variable_reg
	beq       assert_variable_test_variable2_res_reg_eq_test_variable_res_equal
	mov       function_return_reg , #0
assert_variable_test_variable2_res_reg_eq_test_variable_res_equal:
	mov       r0 , function_return_reg
test_function_end:
	pop       {pc, r4 - r7}

['push', '{lr', 'r4', '-', 'r7}']
['mov', 'literal_value_10_52_54_reg', '#10']
['mov', 'literal_value_10_52_54_var1_res_reg', '#1']
['cmp', 'literal_value_10_52_54_reg', 'r0']
['beq', 'literal_value_10_52_54_eq_var1_res_equal']
['mov', 'literal_value_10_52_54_var1_res_reg', '#0']
['literal_value_10_52_54_eq_var1_res_equal:']
['cmp', 'literal_value_10_52_54_var1_res_reg', '#0']
['beq', 'test_function_if_false_0_42_280']
['add', 'function_return_reg', 'r1', 'r0']
['mov', 'r0', 'function_return_reg']
['b', 'test_function_end']
['test_function_if_false_0_42_280:']
['mov', 'literal_value_2_97_98_reg', '#2']
['mov', 'literal_value_2_97_98_var2_res_reg', '#1']
['cmp', 'literal_value_2_97_98_reg', 'r1']
['beq', 'literal_value_2_97_98_eq_var2_res_equal']
['mov', 'literal_value_2_97_98_var2_res_reg', '#0']
['literal_value_2_97_98_eq_var2_res_equal:']
['cmp', 'literal_value_2_97_98_var2_res_reg', '#0']
['beq', 'test_function_if_false_1_87_280']
['sub', 'function_return_reg', 'r1', 'r0']
['mov', 'r0', 'function_return_reg']
['b', 'test_function_end']
['test_function_if_false_1_87_280:']
['mov', 'literal_value_2_141_142_reg', '#2']
['mov', 'literal_value_2_141_142_var2_res_reg', '#1']
['cmp', 'literal_value_2_141_142_reg', 'r1']
['beq', 'literal_value_2_141_142_eq_var2_res_equal']
['mov', 'literal_value_2_141_142_var2_res_reg', '#0']
['literal_value_2_141_142_eq_var2_res_equal:']
['cmp', 'literal_value_2_141_142_var2_res_reg', '#0']
['beq', 'test_function_if_false_2_131_280']
['sub', 'function_return_reg', 'r1', 'r0']
['mov', 'r0', 'function_return_reg']
['b', 'test_function_end']
['test_function_if_false_2_131_280:']
['mov', 'literal_value_2_185_186_reg', '#2']
['mov', 'literal_value_2_185_186_var2_res_reg', '#1']
['cmp', 'literal_value_2_185_186_reg', 'r1']
['beq', 'literal_value_2_185_186_eq_var2_res_equal']
['mov', 'literal_value_2_185_186_var2_res_reg', '#0']
['literal_value_2_185_186_eq_var2_res_equal:']
['cmp', 'literal_value_2_185_186_var2_res_reg', '#0']
['beq', 'test_function_if_false_3_175_280']
['sub', 'function_return_reg', 'r1', 'r0']
['mov', 'r0', 'function_return_reg']
['b', 'test_function_end']
['test_function_if_false_3_175_280:']
['mov', 'literal_value_1_243_244_reg', '#1']
['mov', 'literal_value_1_243_244_var1_res_reg', '#1']
['cmp', 'literal_value_1_243_244_reg', 'r0']
['beq', 'literal_value_1_243_244_eq_var1_res_equal']
['mov', 'literal_value_1_243_244_var1_res_reg', '#0']
['literal_value_1_243_244_eq_var1_res_equal:']
['cmp', 'literal_value_1_243_244_var1_res_reg', '#0']
['beq', 'test_function_if_false_4_233_278']
['add', 'function_return_reg', 'r1', 'r0']
['mov', 'r0', 'function_return_reg']
['b', 'test_function_end']
['test_function_if_false_4_233_278:']
['add', 'var2_var1_res_reg', 'r1', 'r0']
['mov', 'literal_value_44_327_329_reg', '#44']
['add', 'literal_value_44_327_329_var2_var1_res_reg_res_reg', 'literal_value_44_327_329_reg', 'var2_var1_res_reg']
['mov', 'literal_value_2_303_304_reg', '#2']
['mul', 'literal_value_44_327_329_var2_var1_res_reg_res_reg_literal_value_2_303_304_res_reg', 'literal_value_44_327_329_var2_var1_res_reg_res_reg', 'literal_value_2_303_304_reg']
['mov', 'literal_value_3_373_374_reg', '#3']
['add', 'var2_literal_value_3_373_374_res_reg', 'r1', 'literal_value_3_373_374_reg']
['mul', 'var2_literal_value_3_373_374_res_reg_test_variable_res_reg', 'var2_literal_value_3_373_374_res_reg', 'test_variable_reg']
['mov', 'test_variable_test_variable2_res_reg', '#1']
['cmp', 'test_variable_reg', 'test_variable2_reg']
['blt', 'test_variable_lt_test_variable2_res_less_than']
['mov', 'test_variable_test_variable2_res_reg', '#0']
['test_variable_lt_test_variable2_res_less_than:']
['mov', 'assert_variable_test_variable2_res_reg', '#1']
['cmp', 'assert_variable_reg', 'test_variable2_reg']
['bgt', 'assert_variable_gt_test_variable2_res_greater_than']
['mov', 'assert_variable_test_variable2_res_reg', '#0']
['assert_variable_gt_test_variable2_res_greater_than:']
['mov', 'function_return_reg', '#1']
['cmp', 'assert_variable_test_variable2_res_reg', 'test_variable_reg']
['beq', 'assert_variable_test_variable2_res_reg_eq_test_variable_res_equal']
['mov', 'function_return_reg', '#0']
['assert_variable_test_variable2_res_reg_eq_test_variable_res_equal:']
['mov', 'r0', 'function_return_reg']
['test_function_end:']
['pop', '{pc', 'r4', '-', 'r7}']
literal_value_10_52_54_reg                         [2, None]
literal_value_10_52_54_var1_res_reg                [3, None]
r0                                                 [14, None]
function_return_reg                                [13, None]
r1                                                 [10, None]
literal_value_2_97_98_reg                          [2, None]
literal_value_2_97_98_var2_res_reg                 [3, None]
literal_value_2_141_142_reg                        [2, None]
literal_value_2_141_142_var2_res_reg               [3, None]
literal_value_2_185_186_reg                        [2, None]
literal_value_2_185_186_var2_res_reg               [3, None]
literal_value_1_243_244_reg                        [2, None]
literal_value_1_243_244_var1_res_reg               [3, None]
var2_var1_res_reg                                  [2, None]
literal_value_44_327_329_reg                       [2, None]
literal_value_44_327_329_var2_var1_res_reg_res_reg [2, None]
literal_value_2_303_304_reg                        [2, None]
literal_value_44_327_329_var2_var1_res_reg_res_reg_literal_value_2_303_304_res_reg [1, None]
literal_value_3_373_374_reg                        [2, None]
var2_literal_value_3_373_374_res_reg               [2, None]
var2_literal_value_3_373_374_res_reg_test_variable_res_reg [1, None]
test_variable_reg                                  [3, None]
test_variable_test_variable2_res_reg               [2, None]
test_variable2_reg                                 [2, None]
test_variable_lt_test_variable2_res_less_than      [1, None]
assert_variable_test_variable2_res_reg             [3, None]
assert_variable_reg                                [1, None]
assert_variable_gt_test_variable2_res_greater_than [1, None]
test_function:
	push      {lr, r4 - r7}
	mov       r2 , #10
	mov       r3 , #1
	cmp       r2 , r0
	beq       literal_value_10_52_54_eq_var1_res_equal
	mov       r3 , #0
literal_value_10_52_54_eq_var1_res_equal:
	cmp       r3 , #0
	beq       test_function_if_false_0_42_280
	add       r2 , r1 , r0
	mov       r0 , function_return_reg
	b         test_function_end
test_function_if_false_0_42_280:
	mov       r3 , #2
	mov       r4 , #1
	cmp       r3 , r1
	beq       literal_value_2_97_98_eq_var2_res_equal
	mov       r4 , #0
literal_value_2_97_98_eq_var2_res_equal:
	cmp       r4 , #0
	beq       test_function_if_false_1_87_280
	sub       r2 , r1 , r0
	mov       r0 , function_return_reg
	b         test_function_end
test_function_if_false_1_87_280:
	mov       r3 , #2
	mov       r4 , #1
	cmp       r3 , r1
	beq       literal_value_2_141_142_eq_var2_res_equal
	mov       r4 , #0
literal_value_2_141_142_eq_var2_res_equal:
	cmp       r4 , #0
	beq       test_function_if_false_2_131_280
	sub       r2 , r1 , r0
	mov       r0 , function_return_reg
	b         test_function_end
test_function_if_false_2_131_280:
	mov       r3 , #2
	mov       r4 , #1
	cmp       r3 , r1
	beq       literal_value_2_185_186_eq_var2_res_equal
	mov       r4 , #0
literal_value_2_185_186_eq_var2_res_equal:
	cmp       r4 , #0
	beq       test_function_if_false_3_175_280
	sub       r2 , r1 , r0
	mov       r0 , function_return_reg
	b         test_function_end
test_function_if_false_3_175_280:
	mov       r3 , #1
	mov       r4 , #1
	cmp       r3 , r0
	beq       literal_value_1_243_244_eq_var1_res_equal
	mov       r4 , #0
literal_value_1_243_244_eq_var1_res_equal:
	cmp       r4 , #0
	beq       test_function_if_false_4_233_278
	add       r2 , r1 , r0
	mov       r0 , function_return_reg
	b         test_function_end
test_function_if_false_4_233_278:
	add       var2_var1_res_reg , r1 , r0
	mov       r3 , #44
	add       literal_value_44_327_329_var2_var1_res_reg_res_reg , r3 , var2_var1_res_reg
	mov       r3 , #2
	mul       r4_literal_value_2_303_304_res_reg , r4 , literal_value_2_303_304_reg
	mov       r5 , #3
	add       var2_literal_value_3_373_374_res_reg , r1 , literal_value_3_373_374_reg
	mul       r6_test_variable_res_reg , r6 , test_variable_reg
	mov       r7 , #1
No registers left
